export = BCHJS;
declare class BCHJS {
  constructor(config?: { restURL: string; apiToken: string; authPass: string });
  restURL: string;
  apiToken: string;
  authPass: string;
  authToken: string;
  Electrumx: Electrumx;
  Control: Control;
  Mining: Mining;
  RawTransactions: RawTransactions;
  Address: Address;
  BitcoinCash: BitcoinCash;
  Blockchain: Blockchain;
  Crypto: typeof Crypto;
  ECPair: typeof ECPair;
  encryption: Encryption;
  Generating: Generating;
  HDNode: HDNode;
  Mnemonic: Mnemonic;
  Price: Price;
  Script: Script;
  TransactionBuilder: typeof TransactionBuilder;
  Util: Util;
  Schnorr: Schnorr;
  SLP: SLP;
  Utxo: Utxo;
  Transaction: Transaction;
  DSProof: DSProof;
  eCash: Ecash;
  PsfSlpIndexer: PsfSlpIndexer;
}
import Electrumx = require("./electrumx");
import Control = require("./control");
import Mining = require("./mining");
import RawTransactions = require("./raw-transactions");
import Address = require("./address");
import BitcoinCash = require("./bitcoincash");
import Blockchain = require("./blockchain");
import Crypto = require("./crypto");
import ECPair = require("./ecpair");
import Encryption = require("./encryption");
import Generating = require("./generating");
import HDNode = require("./hdnode");
import Mnemonic = require("./mnemonic");
import Price = require("./price");
import Script = require("./script");
import TransactionBuilder = require("./transaction-builder");
import Util = require("./util");
import Schnorr = require("./schnorr");
import SLP = require("./slp/slp");
import Utxo = require("./utxo");
import Transaction = require("./transaction");
import DSProof = require("./dsproof");
import Ecash = require("./ecash");
import PsfSlpIndexer = require("./psf-slp-indexer");
